<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dhu.demo2.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.dhu.demo2.pojo.Order" >
    <id column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="orderTime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="oldPrice" property="oldprice" jdbcType="REAL" />
    <result column="newPrice" property="newprice" jdbcType="REAL" />
    <result column="isPay" property="ispay" jdbcType="BIT" />
    <result column="isSend" property="issend" jdbcType="BIT" />
    <result column="isReceive" property="isreceive" jdbcType="BIT" />
    <result column="isComplete" property="iscomplete" jdbcType="BIT" />
    <result column="addressId" property="addressid" jdbcType="INTEGER" />
    <result column="sellerId" property="sellerid" jdbcType="INTEGER" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="productId" property="productid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, userId, orderTime, oldPrice, newPrice, isPay, isSend, isReceive, isComplete, 
    addressId, sellerId, note, productId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dhu.demo2.pojo.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dhu.demo2.pojo.OrderExample" >
    delete from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dhu.demo2.pojo.Order" >
    insert into order_ (orderId, userId, orderTime, 
      oldPrice, newPrice, isPay, isSend, 
      isReceive, isComplete, addressId, 
      sellerId, note, productId
      )
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{ordertime,jdbcType=TIMESTAMP}, 
      #{oldprice,jdbcType=REAL}, #{newprice,jdbcType=REAL}, #{ispay,jdbcType=BIT}, #{issend,jdbcType=BIT}, 
      #{isreceive,jdbcType=BIT}, #{iscomplete,jdbcType=BIT}, #{addressid,jdbcType=INTEGER}, 
      #{sellerid,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{productid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dhu.demo2.pojo.Order" >
    insert into order_
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="ordertime != null" >
        orderTime,
      </if>
      <if test="oldprice != null" >
        oldPrice,
      </if>
      <if test="newprice != null" >
        newPrice,
      </if>
      <if test="ispay != null" >
        isPay,
      </if>
      <if test="issend != null" >
        isSend,
      </if>
      <if test="isreceive != null" >
        isReceive,
      </if>
      <if test="iscomplete != null" >
        isComplete,
      </if>
      <if test="addressid != null" >
        addressId,
      </if>
      <if test="sellerid != null" >
        sellerId,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="productid != null" >
        productId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldprice != null" >
        #{oldprice,jdbcType=REAL},
      </if>
      <if test="newprice != null" >
        #{newprice,jdbcType=REAL},
      </if>
      <if test="ispay != null" >
        #{ispay,jdbcType=BIT},
      </if>
      <if test="issend != null" >
        #{issend,jdbcType=BIT},
      </if>
      <if test="isreceive != null" >
        #{isreceive,jdbcType=BIT},
      </if>
      <if test="iscomplete != null" >
        #{iscomplete,jdbcType=BIT},
      </if>
      <if test="addressid != null" >
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null" >
        #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dhu.demo2.pojo.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_
    <set >
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null" >
        orderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oldprice != null" >
        oldPrice = #{record.oldprice,jdbcType=REAL},
      </if>
      <if test="record.newprice != null" >
        newPrice = #{record.newprice,jdbcType=REAL},
      </if>
      <if test="record.ispay != null" >
        isPay = #{record.ispay,jdbcType=BIT},
      </if>
      <if test="record.issend != null" >
        isSend = #{record.issend,jdbcType=BIT},
      </if>
      <if test="record.isreceive != null" >
        isReceive = #{record.isreceive,jdbcType=BIT},
      </if>
      <if test="record.iscomplete != null" >
        isComplete = #{record.iscomplete,jdbcType=BIT},
      </if>
      <if test="record.addressid != null" >
        addressId = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.sellerid != null" >
        sellerId = #{record.sellerid,jdbcType=INTEGER},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.productid != null" >
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_
    set orderId = #{record.orderid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      orderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      oldPrice = #{record.oldprice,jdbcType=REAL},
      newPrice = #{record.newprice,jdbcType=REAL},
      isPay = #{record.ispay,jdbcType=BIT},
      isSend = #{record.issend,jdbcType=BIT},
      isReceive = #{record.isreceive,jdbcType=BIT},
      isComplete = #{record.iscomplete,jdbcType=BIT},
      addressId = #{record.addressid,jdbcType=INTEGER},
      sellerId = #{record.sellerid,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      productId = #{record.productid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dhu.demo2.pojo.Order" >
    update order_
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        orderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldprice != null" >
        oldPrice = #{oldprice,jdbcType=REAL},
      </if>
      <if test="newprice != null" >
        newPrice = #{newprice,jdbcType=REAL},
      </if>
      <if test="ispay != null" >
        isPay = #{ispay,jdbcType=BIT},
      </if>
      <if test="issend != null" >
        isSend = #{issend,jdbcType=BIT},
      </if>
      <if test="isreceive != null" >
        isReceive = #{isreceive,jdbcType=BIT},
      </if>
      <if test="iscomplete != null" >
        isComplete = #{iscomplete,jdbcType=BIT},
      </if>
      <if test="addressid != null" >
        addressId = #{addressid,jdbcType=INTEGER},
      </if>
      <if test="sellerid != null" >
        sellerId = #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        productId = #{productid,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dhu.demo2.pojo.Order" >
    update order_
    set userId = #{userid,jdbcType=INTEGER},
      orderTime = #{ordertime,jdbcType=TIMESTAMP},
      oldPrice = #{oldprice,jdbcType=REAL},
      newPrice = #{newprice,jdbcType=REAL},
      isPay = #{ispay,jdbcType=BIT},
      isSend = #{issend,jdbcType=BIT},
      isReceive = #{isreceive,jdbcType=BIT},
      isComplete = #{iscomplete,jdbcType=BIT},
      addressId = #{addressid,jdbcType=INTEGER},
      sellerId = #{sellerid,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      productId = #{productid,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>